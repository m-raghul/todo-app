{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TodoComponent = class TodoComponent {\n  constructor() {\n    this.Title = 'Keep Note';\n    this.add = 'New';\n    this.newTask = '';\n    this.todoTasks = [];\n  }\n  addTask() {\n    if (this.newTask.trim() !== '') {\n      this.todoTasks.push({\n        TaskTitle: this.newTask,\n        completed: false\n      });\n      this.newTask = '';\n    }\n  }\n  toggleTaskCompletion(index) {\n    this.todoTasks.splice(index, 1);\n  }\n};\nTodoComponent = __decorate([Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})], TodoComponent);\nexport { TodoComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAYlC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAAnBC;IACL,UAAK,GAAW,WAAW;IAC3B,QAAG,GAAW,KAAK;IACnB,YAAO,GAAW,EAAE;IACpB,cAAS,GAAW,EAAE;EAYxB;EAVEC,OAAO;IACL,IAAI,IAAI,CAACC,OAAO,CAACC,IAAI,EAAE,KAAK,EAAE,EAAE;MAC9B,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC;QAAEC,SAAS,EAAE,IAAI,CAACJ,OAAO;QAAEK,SAAS,EAAE;MAAK,CAAE,CAAC;MAClE,IAAI,CAACL,OAAO,GAAG,EAAE;;EAErB;EAEAM,oBAAoB,CAACC,KAAa;IAChC,IAAI,CAACL,SAAS,CAACM,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;EACjC;CACD;AAhBYV,aAAa,eALzBD,SAAS,CAAC;EACTa,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWd,aAAa,CAgBzB;SAhBYA,aAAa","names":["Component","TodoComponent","constructor","addTask","newTask","trim","todoTasks","push","TaskTitle","completed","toggleTaskCompletion","index","splice","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\todo-app\\src\\app\\component\\todo\\todo.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\ninterface Task {\n  TaskTitle: string;\n  completed: boolean;\n}\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css'],\n})\nexport class TodoComponent {\n  Title: string = 'Keep Note';\n  add: string = 'New';\n  newTask: string = '';\n  todoTasks: Task[] = [];\n\n  addTask() {\n    if (this.newTask.trim() !== '') {\n      this.todoTasks.push({ TaskTitle: this.newTask, completed: false });\n      this.newTask = '';\n    }\n  }\n\n  toggleTaskCompletion(index: number) {\n    this.todoTasks.splice(index, 1);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}